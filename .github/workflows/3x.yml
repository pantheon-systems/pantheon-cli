name: Terminus 3.x
on:
  push:
jobs:
  # Checkout in separate job because docker image is alpine based and checkout action doesn't work.
  checkout_build:
    runs-on: ubuntu-latest
    container:
      image: quay.io/pantheon-public/php-ci:v7.4
    name: Checkout & build Phar
    env:
      TZ: "/usr/share/zoneinfo/America/Los_Angeles"
      TERM: dumb
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Save repo content as artifact
        uses: actions/upload-artifact@v2
        with:
          name: full-workspace
          path: ${{ github.workspace }}
      - name: Full Composer Install
        run: composer install
      - name: Validate Code
        run: composer code:lint
      - name: Phar Build
        run: composer phar:build
      - name: permissions
        run: chmod +x ./t3
      - name: Save t3.phar as artifact
        uses: actions/upload-artifact@v2
        with:
          name: t3-phar
          path: t3
          if-no-files-found: error

  functional:
    runs-on: ${{ matrix.operating-system }}
    name: Functional testing matrix - PHP ${{ matrix.php-versions }} on ${{ matrix.operating-system }}
    if: ${{ ! startsWith(github.ref, 'refs/tags/')  && github.repository_owner == 'pantheon-systems' }}
    strategy:
      matrix:
        operating-system: [ 'macos-latest' ]
        php-versions: [ '8.0' ]
      max-parallel: 1
    env:
      TZ: "/usr/share/zoneinfo/America/Los_Angeles"
      TERM: dumb
      COMPOSER_PROCESS_TIMEOUT: 0
      COMPOSER_ALLOW_SUPERUSER: 1
      TERMINUS_TOKEN: ${{ secrets.TERMINUS_TOKEN }}
      TERMINUS_SITE: ${{ secrets.TERMINUS_SITE }}
      TERMINUS_ORG: ${{ secrets.TERMINUS_ORG }}
    needs: [ checkout_build ]
    steps:
      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.TERMINUS_SITE_OWNER_SSH_PRIVATE_KEY }}
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: gd, mbstring, zip, ssh2-1.3.1
          coverage: pcov
      - name: Download repo content from artifact
        uses: actions/download-artifact@v2
        with:
          name: full-workspace
      - name: Download terminus.phar as artifact
        uses: actions/download-artifact@v2
        with:
          name: t3-phar
      - name: Install Composer Dependencies
        run: composer install --no-interaction --prefer-dist
      - name: Functional Tests (short)
        run: composer test:short
      - name: Coverage Report
        run: composer coverage
      - name: Save coverage as artifact
        uses: actions/upload-artifact@v2
        with:
          name: CoverageReport
          path: docs/TestCoverage.md
  release:
    runs-on: ubuntu-latest
    name: Release
    container:
      image: quay.io/pantheon-public/php-ci:1.x
    needs: [ functional ]
    if: ${{ startsWith(github.ref, 'refs/tags/')  && github.repository == 'pantheon-systems/pantheon-cli' }}
    steps:
      - name: Download t3.phar as artifact
        uses: actions/download-artifact@v2
        with:
          name: t3-phar
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: t3.phar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # # NOT CURRENTLY USED
  # behat_tests:
  #   runs-on: ubuntu-latest
  #   name: Behat Tests
  #   needs: [ checkout_build ]
  #   if: ${{ startsWith(github.ref, 'refs/tags/')  && github.repository_owner == 'pantheon-systems' }}
  #   strategy:
  #     matrix:
  #       php-versions: [ '7.4', '8.0' ]
  #     fail-fast: false
  #   env:
  #     TERMINUS_VERBOSITY: 22
  #     TERMINUS_EXECUTABLE: t3
  #     TERMINUS_TEST_MODE: 1
  #     TERMINUS_TOKEN: ${{ secrets.TERMINUS_TOKEN }}
  #   steps:
  #     - name: Setup PHP with PECL extension
  #       uses: shivammathur/setup-php@v2
  #       with:
  #         php-version: ${{ matrix.php-versions }}
  #         extensions: gd, mbstring, zip
  #         coverage: pcov
  #     - name: Download repo content from artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: full-workspace
  #     - name: Download terminus.phar as artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: t3-phar
  #     - name: Install Composer Dependencies
  #       run: composer install --no-interaction --prefer-dist
  #     - name: Fix permissions
  #       run: chmod +x ./bin/t3
  #     - name: Behat Tests
  #       run: composer test:behat

  # # NOT CURRENTLY USED
  # package_macos:
  #   runs-on: macos-latest
  #   name: Package a Homebrew release
  #   if: ${{ startsWith(github.ref, 'refs/tags/')  && github.repository_owner == 'pantheon-systems' }}
  #   needs: [ 'functional_tests', 'behat_tests' ]
  #   steps:
  #     - name: Brew Tap Terminus
  #       run: brew install stovak/t3/terminus
  #     - name: Update tap with new release
  #       run: brew bump-formula-pr --url=${{ steps.tagged.outputs.url }} --no-browse --no-audit --commit stovak/t3/terminus

  # # NOT CURRENTLY USED
  # package_linux:
  #   runs-on: ubuntu-latest
  #   name: Package .deb Release
  #   container:
  #     image: quay.io/pantheon-public/php-ci:v7.4
  #   if: ${{ startsWith(github.ref, 'refs/tags/')  && github.repository_owner == 'pantheon-systems' }}
  #   needs: [ 'functional_tests', 'behat_tests' ]
  #   steps:
  #     - name: Download repo content from artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: full-workspace
  #     - name: Download terminus.phar as artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: t3-phar
  #     - name: Full Composer Install
  #       run: composer install
  #     - name: Prepare needed folder and fix permissions
  #       run: mkdir -p ~/.terminus/cache/tokens && chmod +x ./t3
  #     - name: Passegers, gather ye packages
  #       run: composer bundle:linux
  #     - name: Save t3 deb as artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: t3-deb
  #         path: ./*.deb
  #         if-no-files-found: error

  # # NOT CURRENTLY USED
  # publish_linux:
  #   runs-on: ubuntu-latest
  #   name: Publish .deb Release
  #   strategy:
  #     matrix:
  #       # Add needed repositories in the form of <package_name>/<distro>/<version>.
  #       repository:
  #         - 'terminus/debian/buster'
  #         - 'terminus/debian/bullseye'
  #         - 'terminus/ubuntu/bionic'
  #         - 'terminus/ubuntu/focal'
  #         - 'terminus/ubuntu/groovy'
  #         - 'terminus/ubuntu/hirsute'
  #   if: ${{ startsWith(github.ref, 'refs/tags/')  && github.repository_owner == 'pantheon-systems' }}
  #   needs: [ 'package_linux' ]
  #   steps:
  #     - name: Download terminus deb as artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: t3-deb
  #     - uses: docker://lpenz/ghaction-packagecloud:v0.2
  #       with:
  #         user: stovak
  #         repository: ${{ matrix.repository }}
  #         files: |
  #           *.deb
  #       env:
  #         PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
